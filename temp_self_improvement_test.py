# temp_self_improvement_test.py
import os
import sys
from dotenv import load_dotenv
import tkinter as tk
from tkinter import simpledialog

# プロジェクトのルートディレクトリをPythonパスに追加
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.gemini_generator import GeminiGenerator
from src.sub_keyword_selector import SubKeywordSelector

def run_self_improvement_test():
    """
    提供されたデータを使用してサブキーワード生成ロジックをテストする。
    """
    print("--- サブキーワード生成 自己修復テスト ---")
    
    # .envファイルから環境変数を読み込む
    load_dotenv()

    # APIキーが環境変数に設定されているか確認
    if not os.getenv("GEMINI_API_KEY"):
        print("エラー: 環境変数 'GEMINI_API_KEY' が設定されていません。")
        return

    # テストデータ
    main_keyword = "ワークマン 空調服"
    suggest_list = [
        "ワークマンで一番涼しいパンツは？", "ワークマンの冷感機能の効果は何ですか？", "ワークマンで首に巻く冷たいやつは何ですか？",
        "ワークマンのリカバリーウェアとは何ですか？", "冷感敷きパッドはなぜ冷たいのでしょうか？", "冷感インナーの効果は何ですか？",
        "持続冷感とは何ですか？", "ワークマンの電熱ベストはどのくらい使えますか？", "ワークマンのヒートアシストとは何ですか？",
        "氷撃インナーの効果とは？", "Q-maxの最高値はいくつですか？", "フリーズテックの効果とは？", "冷感タオルにはどんな効果があるのですか？",
        "冷感素材はなぜ冷たいのでしょうか？", "接触温冷感とは何ですか？", "空調服 涼しい ランキング", "ワークマン 空調服 バッテリーセット24v",
        "空調服 最強 24v", "ワークマン 空調服 バッテリーセット 値段", "空調服 コスパ最強", "空調服 おすすめ",
        "ワークマン 空調服 バッテリーセット24v 口コミ", "ワークマン 空調服 バートル", "空調服はベストと半袖のどちらがいいですか？",
        "空調服はなぜ禁止されているのですか？", "空調服より涼しい服は？", "空調服の下には何を着ればよいですか？",
        "空調服は熱中症対策になりますか？", "空調服 何が1番涼しい？", "空調服は毎日洗うべきですか？", "ワークマンの空調服のブランドは？",
        "ワークマン 着るエアコン いくら？", "バートル19Vは何時間持つ？", "空調服の12Vと24Vの違いは何ですか？", "空調服がダメな理由は何ですか？",
        "空調服のバッテリーは何年くらい持ちますか？", "ベルトファンと空調服、どちらが涼しいですか？", "空調服は雨の日でも大丈夫ですか？",
        "ワークマンの防寒着は何度まで着られますか？", "空調服ってどうなの？", "ワークマンの製品が安い理由は何ですか？",
        "ワークマンでおすすめの防寒着は？", "空調服は何時間持つ？", "空調服の電気代はいくらですか？",
        "ワークマンが冷暖房を兼ね備えた「着るエアコン」とは？", "バートルはなぜ人気があるのですか？", "空調服にフードが付いているメリットは？",
        "バートルの寿命はどれくらいですか？", "ワークマンでバートルは売ってますか？", "ワークマンの空調服はどのくらい使えますか？",
        "バートル空調服2025は互換性がありますか？", "ワークマンは値引き販売をしないのはなぜですか？", "WORKMANとWORKMANプラスの違いは何ですか？",
        "ワークマンはどこの傘下ですか？", "水冷服と空調服のどちらがよいですか？", "空調服は体温を下げますか？",
        "ワークマンの会員になるとどんなメリットがありますか？", "ワークマンでサイズが合わなかった商品の返品はできますか？",
        "ワークマンの初期費用はいくらですか？", "ワークマンのライバル店は？", "カインズはどこの国に本社がありますか？",
        "ワークマンの昔の名前は？", "一度着用した服は返品できますか？", "ワークマンでレシートをなくしたら交換してもらえますか？",
        "ワークマンでクレジットカードは使えますか？", "なぜ首を冷やしてはいけないのですか？", "ネッククーラーは何時間もつ使えますか？",
        "ワークマンの着るエアコンの値段はいくらですか？", "ワークマンの空調服のバッテリーの持ち時間は？"
    ]
    # 重複を削除
    suggest_list = sorted(list(set(suggest_list)))

    try:
        # Geminiジェネレーターとサブキーワードセレクターを初期化
        gemini_gen = GeminiGenerator()
        selector = SubKeywordSelector(gemini_generator=gemini_gen)

        # サブキーワードを生成
        print("テストを開始します...")
        final_keywords = selector.select_sub_keywords(main_keyword, suggest_list)

        if final_keywords:
            print("\n--- テスト完了 ---")
            print(f"生成されたサブキーワードの数: {len(final_keywords)}")
            print("--------------------")
            # 最終結果を分かりやすく表示
            for i, kw in enumerate(final_keywords, 1):
                print(f"{i:2d}. {kw}")
            print("--------------------")

        else:
            print("\n--- テスト失敗 ---")
            print("サブキーワードを生成できませんでした。")
            print("--------------------")

    except Exception as e:
        print(f"\n--- テスト中にエラーが発生しました ---")
        import traceback
        traceback.print_exc()
        print("---------------------------------")

if __name__ == "__main__":
    # Tkinterのルートウィンドウを作成して非表示にする
    # これにより、simpledialogが背後でエラーを起こすのを防ぐ
    root = tk.Tk()
    root.withdraw()
    run_self_improvement_test()
    root.destroy()
