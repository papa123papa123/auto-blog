# src/prompts_text/summarization_prompt.py

def create_summarization_prompt_text(main_keyword: str, text_to_summarize: str) -> str:
    """
    抽出したテキストから構造化されたJSONデータを生成させるためのプロンプトを作成する。
    """
    prompt = f"""
# 指示
あなたは、与えられた文章から重要な情報を抽出し、構造化されたJSONデータにまとめる専門家です。
以下の「抽出元テキスト」を分析し、指定された「JSONフォーマット」に従って、内容を正確に要約してください。

# 目的
この記事は「{main_keyword}」というキーワードに関するものであり、読者の疑問に答えるための高品質なデータベースを構築することを目的としています。抽出する情報は、この目的に沿ったものである必要があります。

# 抽出元テキスト
---
{text_to_summarize}
---

# 絶対遵守のルール
1.  **正確性**: テキストに書かれている事実のみを抽してください。個人的な意見や解釈、テキストにない情報を追加してはいけません。
2.  **網羅性**: テキストに含まれる製品名、サービス名、特徴、スペック、価格、メリット、デメリットなどの重要な情報を、可能な限り網羅的に抽出してください。
3.  **JSON形式**: 出力は、必ず以下の「JSONフォーマット」に厳密に従ってください。JSON以外のテキスト（前置きや後書きなど）は一切含めないでください。
4.  **リスト形式**: `products` や `topics` の値は、必ずリスト（`[]`）形式にしてください。情報が1つしかなくてもリストにします。

# JSONフォーマット
```json
{{
  "summary_title": "（抽出元テキストの主題を簡潔に表すタイトル）",
  "products": [
    {{
      "name": "（製品名やサービス名）",
      "features": [
        "（箇条書きで特徴を列挙）"
      ],
      "specs": {{
        "（項目）": "（値）"
      }},
      "pros": [
        "（箇条書きでメリットを列挙）"
      ],
      "cons": [
        "（箇条書きでデメリットを列挙）"
      ]
    }}
  ],
  "topics": [
    {{
      "topic_name": "（製品以外の重要なトピックや概念）",
      "description": "（そのトピックに関する詳細な説明）"
    }}
  ]
}}
```
"""
    return prompt